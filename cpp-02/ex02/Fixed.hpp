/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Fixed.hpp                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: alsiavos <alsiavos@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/11/15 13:46:55 by alsiavos          #+#    #+#             */
/*   Updated: 2024/11/18 17:37:29 by alsiavos         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef FIXED_HPP
# define FIXED_HPP

# include "Color.hpp"
# include <cmath>
# include <fstream>
# include <iostream>
# include <string>

class Fixed {
	private:
		int _value;
		static const int _bits = 8;

	public:
		Fixed();                   // constructeur par défaut
		Fixed(const Fixed &src);   // constructeur de copie
		Fixed(int const &value);   // constructeur avec int
		Fixed(float const &value); // constructeur avec float
		~Fixed();                  // destructeur

		Fixed &operator=(const Fixed &rhs); // opérateur d'affectation

		// Getters et setters
		int getRawBits(void) const;     // récupère la valeur brute
		void setRawBits(int const raw); // définit la valeur brute
		float toFloat(void) const;      // conversion en float
		int toInt(void) const;          // conversion en int

		// Opérateurs de comparaison
		bool operator>(Fixed const &rhs) const;
		bool operator<(Fixed const &rhs) const;
		bool operator>=(Fixed const &rhs) const;
		bool operator<=(Fixed const &rhs) const;
		bool operator==(Fixed const &rhs) const;
		bool operator!=(Fixed const &rhs) const;

		// Opérateurs arithmétiques
		Fixed operator+(Fixed const &rhs) const;
		Fixed operator-(Fixed const &rhs) const;
		Fixed operator*(Fixed const &rhs) const;
		Fixed operator/(Fixed const &rhs) const;

		// Opérateurs d'incrémentation et de décrémentation
		Fixed &operator++();   // pré-incrémentation
		Fixed operator++(int); // post-incrémentation
		Fixed &operator--();   // pré-décrémentation
		Fixed operator--(int); // post-décrémentation

		// Fonctions statiques min/max
		static Fixed &min(Fixed &a, Fixed &b);
		static Fixed &max(Fixed &a, Fixed &b);
		static const Fixed &min(const Fixed &a, const Fixed &b);
		static const Fixed &max(const Fixed &a, const Fixed &b);
};

std::ostream &operator<<(std::ostream &o, Fixed const &rhs);
	// operator<< overload for Fixed

#endif

// cannonical = means the default functions that are generated by the compiler if they are not defined by the programmer
